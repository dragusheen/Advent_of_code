#!/usr/bin/python3

DATA_PATH = "./data/2024/day_04.txt"

def get_file_content(filepath):
    with open(filepath, 'r') as file:
        return file.read()

def check_in_direction(content, y, x, dy, dx, word):
    lenY = len(content)
    lenX = len(content[0])

    if x + dx < 0 or x + dx >= lenX or y + dy < 0 or y + dy >= lenY:
        return 0

    for i in range (len(word)):
        if x + i * dx < 0 or x + i * dx >= lenX or y + i * dy < 0 or y + i * dy >= lenY or content[y + i * dy][x + i * dx] != word[i]:
            return 0
    return 1

def set_val(tab, y, x, val):
    row = list(tab[y])
    row[x] = val
    tab[y] = ''.join(row)
    return tab

def part_1(content, word):
    count = 0
    for y in range(len(content)):
        for x in range(len(content[0])):
            if not content[y][x] == word[0]:
                continue
            for dy in range(-1, 2):
                for dx in range(-1, 2):
                    count += check_in_direction(content, y, x, dy, dx, word)
    return count

def check_pattern(content, x, y, pattern):
    for i in range(-1, 2):
        for j in range(-1, 2):
            if pattern[1 + i][1 + j] == '.':
                continue
            if not content[y + i][x + j] == pattern[1 + i][1 + j]:
                return False
    return True

def part_2(content):
    count = 0

    patterns = [
        [ "M.M", ".A.", "S.S" ],
        [ "S.M", ".A.", "S.M" ],
        [ "S.S", ".A.", "M.M" ],
        [ "M.S", ".A.", "M.S" ],
    ]
    for y in range(1, len(content) - 1):
        for x in range(1, len(content[0]) - 1):
            if not content[y][x] == 'A':
                continue
            ok = False
            for pattern in patterns:
                if check_pattern(content, x, y, pattern):
                    ok = True
            count += 1 if ok else 0
    return count

if __name__ == "__main__":
    content = get_file_content(DATA_PATH)
    content = content.split('\n')
    print(f"Part 1: {part_1(content, "XMAS")}")
    print(f"Part 2: {part_2(content)}")
